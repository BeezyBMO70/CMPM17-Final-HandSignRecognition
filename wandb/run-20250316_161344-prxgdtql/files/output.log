training in progress...
starting new batching
tensor([ 0,  0,  0,  0,  0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  9,  0,  0,  0, 55], device='cuda:0')
tensor([ 0, 14,  0,  0, 50], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  7,  0,  0, 57], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 41, 23], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0, 14,  0,  0,  0, 50], device='cuda:0')
tensor([ 0, 52,  0,  0, 12], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0, 62,  0,  2], device='cuda:0')
tensor([ 1, 63], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 56,  8], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([49,  0,  0,  0, 15], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  8, 56], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 60,  0,  0,  4], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([53,  0,  0,  0,  0, 11], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  0, 48,  0, 16], device='cuda:0')
tensor([ 0,  0, 64], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
tensor([ 0, 64], device='cuda:0')
tensor([ 0,  0,  1,  0,  0, 63], device='cuda:0')
tensor([ 0,  0,  0, 64], device='cuda:0')
tensor([ 9,  0,  8,  0, 47], device='cuda:0')
tensor([64], device='cuda:0')
tensor([ 0,  0,  0,  0, 64], device='cuda:0')
Traceback (most recent call last):
  File "c:\Users\evche\OneDrive\Desktop\UCSC_Freshman\CMPM17-ML\CMPM17-Final-HandSignRecognition\main.py", line 214, in <module>
    for batch in finger_dl_train: # training data loop
                 ^^^^^^^^^^^^^^^
  File "C:\Users\evche\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\torch\utils\data\dataloader.py", line 701, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\evche\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\torch\utils\data\dataloader.py", line 757, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\evche\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\torch\utils\data\_utils\fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "c:\Users\evche\OneDrive\Desktop\UCSC_Freshman\CMPM17-ML\CMPM17-Final-HandSignRecognition\main.py", line 127, in __getitem__
    img = Image.open(self.features[index])
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\evche\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\PIL\Image.py", line 3256, in open
    prefix = fp.read(16)
             ^^^^^^^^^^^
KeyboardInterrupt
